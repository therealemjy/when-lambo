/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Owner, OwnerInterface } from "../Owner";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102ce806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806313af40351461003b5780638da5cb5b14610057575b600080fd5b6100556004803603810190610050919061017f565b610075565b005b61005f610146565b60405161006c91906101da565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa906101f5565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061017981610281565b92915050565b60006020828403121561019157600080fd5b600061019f8482850161016a565b91505092915050565b6101b181610226565b82525050565b60006101c4600a83610215565b91506101cf82610258565b602082019050919050565b60006020820190506101ef60008301846101a8565b92915050565b6000602082019050818103600083015261020e816101b7565b9050919050565b600082825260208201905092915050565b600061023182610238565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e6572206f6e6c7900000000000000000000000000000000000000000000600082015250565b61028a81610226565b811461029557600080fd5b5056fea26469706673582212209a6b194ef790cdd551b4bdd387f8718180d5cdca7f0bbde2cddfe4458281c7fc64736f6c63430008040033";

export class Owner__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Owner> {
    return super.deploy(overrides || {}) as Promise<Owner>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Owner {
    return super.attach(address) as Owner;
  }
  connect(signer: Signer): Owner__factory {
    return super.connect(signer) as Owner__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerInterface {
    return new utils.Interface(_abi) as OwnerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Owner {
    return new Contract(address, _abi, signerOrProvider) as Owner;
  }
}
